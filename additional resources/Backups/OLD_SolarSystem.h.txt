#pragma once
#ifndef SOLAR_SYSTEM_H


#include "Core.h"
#include "Shape.h"
#include <vector>
#include "GameGlobal.h"

class SolarSystem {
	static Shape thisStyle;
	int maxDepth;
	void draw(Core::Graphics& graphics, const Matrix3D& transform, int depth);
public:
	static float orbitLenDecrease;
	static float SizeDecrease;
	static float orbitAcc;
	float orbitAngle;
	float orbitLength;
	float size;
	int children;

	SolarSystem(int depth = 3,int children = 4, float orbitLength = 40, float size = 5) {
		startup(depth,children,orbitLength,size);
	}
	inline void update(float dt) {
		orbitAngle+=orbitAcc*dt;
	}
	inline void draw(Core::Graphics& graphics, const Matrix3D& transform, int depth, float scale, int children=2;) {
		if(depth>=0)
			float averageAngle = anglesInCircle / children;
			for(int i=0;i<children;i++) {
				Matrix3D currentTrans = transform
										* Matrix3D::rotationMatrix(orbitAngle + i * averageAngle)
										* Matrix3D::translate(Vector2D(0,orbitLength*scale))
										* Matrix3D::scale(scale);
				thisStyle.draw(graphics,currentTrans);
				draw(graphics,currentTrans,depth-1,scale*.5);
			}
	}
};

#endif